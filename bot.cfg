[SERVER]
host = irc.esper.net
port = 6667
channels = #testwa
#Min delay between two line sending.
floodlimit = 0.75
#Server password
password = 

[BOT]
nick = MCPBot_Reborn3
cmdchar = %
#Automatically accept invites ?
autoaccept = true
#Automatically join channels in the chan list ?
autojoin = true
lognormal = botlog.log
logerrors = errors.log

[GROUPS]
any = {"commands": ["scm", "help", "gp", "scf", "gf", "gc", "gm", "find", "gcf", "gcm", "findall", "fssf", "version", "fssm", "fscf", "fscm", "dcc", "ssm", "ssf", "versions", "sp", "sm", "gsf", "gsm", "sf"]}
admin = {"commands": ["banrm", "groupmeta", "userall", "groupget", "userrm", "groupadd", "banget", "banadd", "useradd", "userget", "grouprm", "banall", "sendraw"]}
db_admin = {"commands": ["sql"]}
maintainer = {"commands": ["fsp", "fsm", "fsf"]}
lock_control = {"commands": ["lf", "ulp", "lm", "lp", "ulm", "ulf"]}

[USERS]
profmobius = admin;db_admin;lock_control
zeux = admin
searge|office = admin
r4wk = admin
searge = admin
cojo = maintainer
bspkrs = db_admin;lock_control
r4wk-work = admin
thvortex = admin;maintainer
scottwears = admin
lunatrius = admin
tahg = admin
ichun = admin
matthewprenger = admin
mumfrey = admin

[AUTH]
#Can users without a registered nick emit commands ?
allowunregistered = true
#Authentication refresh delay in seconds. Auth will be considered valid for this period.
timeout = 60

[DCC]
active = true
#Can users connect via DCC if the user is not properly IP identified ?
allowanon = false

[DATABASE]
host = 172.245.30.34
port = 5432
user = postgres
name = mcpbot
pass = MCPBot0

[NICKSERV]
#Nick of the nick server used for auth purposes
nickserv = NickServ
#Command to use to determine the ACC level of a user
nickauth = PRIVMSG {nickserv} :acc {nick}
#Regexp to parse the ACC answer
authregex = (?P<nick>.+) ACC (?P<level>[0-9])
#Regexp to parse in the nickserv msg when the nick need to be identified
nsmarker = This nickname is registered
#Reply to an identify request
nsreply = PRIVMSG {nickserv} :identify {nspass}

[BANLIST]

